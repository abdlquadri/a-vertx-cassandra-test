buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

version = '3.3.3'

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException('''A Haiku:
                                      |  This needs Java 8,
                                      |  You are using something else,
                                      |  Refresh. Try again.'''.stripMargin())
}

repositories {
    mavenCentral()
    maven {
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
    }
}

task annotationProcessing(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file('src/main/generated')
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-AoutputDirectory=${destinationDir.absolutePath}"
    ]
}

sourceSets {
    main {
        java {
            srcDirs += 'src/main/generated'
        }
    }
}

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    dependsOn annotationProcessing

}

dependencies {
    compile fileTree(dir: 'jars', include: ['*.jar'])
    compile "io.vertx:vertx-core:$version"
    compile "io.vertx:vertx-web:$version"
    compile "io.vertx:vertx-auth-shiro:$version"
    compile "io.vertx:vertx-hazelcast:$version"
    compile "com.datastax.cassandra:cassandra-driver-core:3.1.0"
    compile "com.datastax.cassandra:cassandra-driver-mapping:3.1.0"
    compile "com.datastax.cassandra:cassandra-driver-extras:3.1.0"


//    compile "com.englishtown.vertx:vertx-cassandra:3.2.0"


    compileOnly "io.vertx:vertx-codegen:$version"

    testCompile "io.vertx:vertx-unit:$version"
    testCompile group: 'junit', name: 'junit', version: '4.12'

}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': 'ng.abdlquadri.util.Deployer'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

shadowJar.dependsOn test